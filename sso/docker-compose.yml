---
networks:
  gitea: {}
  sso: {}

volumes:
  gitea-data: {}
  gitea-postgresql-data: {}
  zitadel-postgresql-data: {}

services:
  # SSO client applications
  gitea:
    image: gitea/gitea:1.21-rootless
    depends_on:
      gitea-postgresql:
        condition: service_healthy
    environment:
      # These variables are only used for first-time setup
      # Further modifications should be made to /data/gitea/conf/app.ini
      APP_NAME: "Gitadel"
      DISABLE_REGISTRATION: "true"
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: "gitea-postgresql:5432"
      GITEA__database__NAME: gitea
      GITEA__database__USER: gitea
      GITEA__database__PASSWD: gitea
    networks:
      - gitea
      - sso
    ports:
      - 3000:3000
      - 3022:22
    volumes:
      - gitea-data:/var/lib/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  gitea-postgresql:
    image: postgres:16
    environment:
      POSTGRES_USER: gitea
      POSTGRES_PASSWORD: gitea
      POSTGRES_DB: gitea
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "gitea", "-U", "gitea"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    networks:
      - gitea
    volumes:
      - gitea-postgresql-data:/var/lib/postgresql/data

  # SSO services
  zitadel:
    image: "ghcr.io/zitadel/zitadel:v2.50.1"
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: "zitadel-postgresql"
      ZITADEL_DATABASE_POSTGRES_PORT: "5432"
      ZITADEL_DATABASE_POSTGRES_DATABASE: "zitadel"
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: "zitadel"
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: "zitadel"
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: "disable"
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: "postgres"
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: "postgres"
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: "disable"
      ZITADEL_EXTERNALDOMAIN: "zitadel.docker"
      ZITADEL_EXTERNALSECURE: "false"
    depends_on:
      zitadel-postgresql:
        condition: service_healthy
    networks:
      sso:
        aliases:
          - zitadel.docker
    ports:
      - "8080:8080"

  zitadel-postgresql:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zitadel
    networks:
      - sso
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    volumes:
      - zitadel-postgresql-data:/var/lib/postgresql/data
